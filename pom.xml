<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!--NOTE: if we call a particular phase via a maven command, such as "mvn compile", all phases up to and
    including that phase will be executed
        NOTE: some plugins are maven default plugins and like war, jar, antrun, ... if you dont specify a version for them
          then the default version of current maven installation will be used-->

    <groupId>com.qbros</groupId>
    <artifactId>webJSF</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>war</packaging>


    <name>JSF</name>
    <description>A simple Servlet.</description>
    <url>http://www.qbros.com</url>

    <!--JBOSS versions and JEE specifications
    Link: https://en.wikipedia.org/wiki/Java_Platform,_Enterprise_Edition
    Link: https://stackoverflow.com/a/31760335/3593084-->
    <properties>
        <jsf.api.version>2.2.0</jsf.api.version>
        <el.api.version>3.0.0</el.api.version>
        <servlet.api.version>3.1.0</servlet.api.version>
        <cdi.api.version>2.0</cdi.api.version>
        <omni.version>2.7</omni.version>
        <slf4j.api.version>1.7.25</slf4j.api.version>
        <apache-shiro.version>1.4.0</apache-shiro.version>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <deploy.path>C:\WTMS\jboss-eap-6.3\standalone\deployments\</deploy.path>
    </properties>

    <dependencies>

        <!--SLF4J-->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.api.version}</version>
        </dependency>

        <!--JSF 2-->
        <dependency>
            <groupId>com.sun.faces</groupId>
            <artifactId>jsf-api</artifactId>
            <version>${jsf.api.version}</version>
        </dependency>

        <!--Servlet-->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>${servlet.api.version}</version>
        </dependency>

        <!-- COMMENTS

        https://stackoverflow.com/questions/31471468/do-i-need-jsf-api-or-jsf-impl-or-both-to-start-using-jsf-why-are-they-not-merge
         each version of jboss has specific version of JSF ...
        Link https://access.redhat.com/articles/112673#EAP_6 so you dont need to add JSF and ...  unless the version
        provided by jboss is not useful for you
        <dependency>
            <groupId>com.sun.faces</groupId>
            <artifactId>jsf-impl</artifactId>
            <version>2.1.7</version>
        </dependency>

        no usage !!
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
            <version>1.2</version>
        </dependency>

        this one is old remove it
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>2.5</version>
        </dependency>

        no usage of jsp
        <dependency>
            <groupId>javax.servlet.jsp</groupId>
            <artifactId>jsp-api</artifactId>
            <version>2.1</version>
        </dependency>
        -->

        <!--OmniFaces 3.x requires Java 1.8, JSF 2.3, EL 3.0, Servlet 3.1, CDI 2.0, WS 1.1-->
        <dependency>
            <groupId>org.omnifaces</groupId>
            <artifactId>omnifaces</artifactId>
            <version>${omni.version}</version>
        </dependency>

        <!--EL-->
        <dependency>
            <groupId>javax.el</groupId>
            <artifactId>javax.el-api</artifactId>
            <version>${el.api.version}</version>
        </dependency>


        <!--CDI -->
        <dependency>
            <groupId>javax.inject</groupId>
            <artifactId>javax.inject</artifactId>
            <version>1</version>
        </dependency>
        <dependency>
            <groupId>javax.enterprise</groupId>
            <artifactId>cdi-api</artifactId>
            <version>${cdi.api.version}</version>
        </dependency>

        <!--prime faces-->
        <dependency>
            <groupId>org.primefaces</groupId>
            <artifactId>primefaces</artifactId>
            <version>6.2</version>
        </dependency>

        <!-- primefaces-extensions -->
        <dependency>
            <groupId>org.primefaces.extensions</groupId>
            <artifactId>primefaces-extensions</artifactId>
            <version>6.2.9</version>
        </dependency>

        <!--primefaces default themes https://mvnrepository.com/artifact/org.primefaces.themes/all-themes -->
        <dependency>
            <groupId>org.primefaces.themes</groupId>
            <artifactId>all-themes</artifactId>
            <version>1.0.10</version>
        </dependency>

        <!--material theme-->
        <dependency>
            <groupId>com.github.adminfaces</groupId>
            <artifactId>admin-theme</artifactId>
            <version>1.0.0-RC20</version>
            <classifier>dev</classifier>
        </dependency>

        <!--Info: shiro vs j2ee security https://stackoverflow.com/questions/10332421/apache-shiro-vs-java-ee-native-apis-->
        <!-- https://mvnrepository.com/artifact/org.apache.shiro/shiro-web -->
        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-web</artifactId>
            <version>${apache-shiro.version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.apache.shiro/shiro-core -->
        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-core</artifactId>
            <version>${apache-shiro.version}</version>
            <exclusions>
                <exclusion>
                    <artifactId>slf4j-api</artifactId>
                    <groupId>org.slf4j</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.apache.shiro/shiro-ehcache -->
        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-ehcache</artifactId>
            <version>${apache-shiro.version}</version>
            <exclusions>
                <exclusion>
                    <artifactId>slf4j-api</artifactId>
                    <groupId>org.slf4j</groupId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-faces</artifactId>
            <version>2.0</version>
            <exclusions>
                <exclusion>
                    <artifactId>shiro-web</artifactId>
                    <groupId>org.apache.shiro</groupId>
                </exclusion>
            </exclusions>
        </dependency>

    </dependencies>

    <repositories>
        <repository>
            <id>PrimeRepo</id>
            <name>PrimeRepoName</name>
            <url>https://repository.primefaces.org/</url>
        </repository>

        <!--needs to set aproxy for it in the setting.cml-->
        <!--<repository>-->
            <!--<id>ShiroJSFRepo</id>-->
            <!--<name>Spring Plugins Repository</name>-->
            <!--<url>http://repo.spring.io/plugins-release/</url>-->
        <!--</repository>-->
    </repositories>

    <build>
        <finalName>JSF</finalName>
        <plugins>

            <!--ant run-->
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>install</phase>
                        <configuration>
                            <tasks>

                                <!--
                                  Place any Ant task here. You can add anything
                                  you can add between <target> and </target> in a
                                  build.xml.
                                -->
                                <copy file="${project.build.directory}/${project.build.finalName}.${project.packaging}"
                                      tofile="${deploy.path}"/>
                            </tasks>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!--enforcer-->
            <!--Link:https://dzone.com/articles/solving-dependency-conflicts-in-maven-->
            <!--there is a difference between configurations inside execution tag and outside it
             Link: https://stackoverflow.com/a/6760365/3593084-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>1.4.1</version>
                <configuration>
                    <rules>
                        <dependencyConvergence>

                        </dependencyConvergence>
                        <bannedDependencies>
                            <excludes>
                                <!-- exclude all versions lower than 1.2.17-->
                                <exclude>log4j:log4j:[0.0,1.7.25)</exclude>
                            </excludes>
                            <message>A banned dependency or plugin was found!</message>
                        </bannedDependencies>
                    </rules>
                </configuration>
                <executions>
                    <execution>
                        <id>validate_Enforce</id>
                        <phase>validate</phase>
                        <goals><goal>display-info</goal></goals>
                    </execution>
                    <execution>
                        <id>pack_enforce</id>
                        <phase>package</phase>
                        <goals><goal>enforce</goal></goals>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>
</project>

